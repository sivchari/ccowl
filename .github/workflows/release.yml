name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write

jobs:
  build-linux:
    strategy:
      matrix:
        include:
          - platform: linux/amd64
            goarch: amd64
            name: ccowl-linux-amd64
          - platform: linux/arm64
            goarch: arm64
            name: ccowl-linux-arm64
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Linux binary with Docker
        run: |
          cat > Dockerfile.build <<EOF
          FROM golang:1.24-bullseye
          RUN apt-get update && apt-get install -y \
              gcc \
              pkg-config \
              libgtk-3-dev \
              libayatana-appindicator3-dev
          ENV CGO_ENABLED=1
          WORKDIR /tmp/build
          COPY . .
          RUN chmod -R 777 /tmp/build && \
              go mod download && \
              go build -trimpath -ldflags="-s -w" -o ${{ matrix.name }} .
          EOF
          docker buildx build --platform ${{ matrix.platform }} --output type=local,dest=. -f Dockerfile.build .

      - name: Compress binary
        run: |
          tar -czf ${{ matrix.name }}.tar.gz ${{ matrix.name }}
          sha256sum ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}*

  build-others:
    strategy:
      matrix:
        include:
          - os: macos-latest
            goos: darwin
            goarch: amd64
            name: ccowl-darwin-amd64
          - os: macos-latest
            goos: darwin
            goarch: arm64
            name: ccowl-darwin-arm64
          - os: windows-latest
            goos: windows
            goarch: amd64
            name: ccowl-windows-amd64.exe
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24'

      - name: Build binary
        run: |
          CGO_ENABLED=1 GOOS=${{ matrix.goos }} GOARCH=${{ matrix.goarch }} go build -trimpath -ldflags="-s -w" -o ${{ matrix.name }} .

      - name: Compress binary (macOS)
        if: matrix.goos == 'darwin'
        run: |
          tar -czf ${{ matrix.name }}.tar.gz ${{ matrix.name }}
          shasum -a 256 ${{ matrix.name }}.tar.gz > ${{ matrix.name }}.tar.gz.sha256

      - name: Compress binary (Windows)
        if: matrix.goos == 'windows'
        run: |
          Compress-Archive -Path ${{ matrix.name }} -DestinationPath ${{ matrix.name }}.zip
          Get-FileHash -Algorithm SHA256 ${{ matrix.name }}.zip | Select-Object Hash | Out-File ${{ matrix.name }}.zip.sha256 -Encoding ASCII
        shell: pwsh

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.name }}
          path: |
            ${{ matrix.name }}*

  release:
    needs: [build-linux, build-others]
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          files: |
            ccowl-linux-amd64/*
            ccowl-linux-arm64/*
            ccowl-darwin-amd64/*
            ccowl-darwin-arm64/*
            ccowl-windows-amd64.exe/*
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
